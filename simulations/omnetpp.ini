#
# Authors: Alberto Cristallo, Luca Ciampi, Valerio Tanferna
#

[General]
network = AerocomSystem
sim-time-limit = 5000s
#warmup-period = 1500s
#simtime-resolution = as
#record-eventlog = true
#debug-on-errors = true
num-rngs = 4
repeat = 10
seed-set = ${repetition}

**.N = 50
**.numberOfServers = 5
AerocomSystem.airCraft[*].source.packetSize = 2048b
AerocomSystem.airCraft[*].source.packetPriority = uniform(1, 4, 3)		# Note that it is useful only if priority_policy of the queue is chosen
AerocomSystem.airCraft[*].router.routingAlgorithm = ${routingAlgorithm="RANDOM"}#, "RANDOM", "SINGLE_CHANNEL"}
AerocomSystem.airCraft[*].router.queuePolicy = ${queuePolicy="FIFO_POLICY"}#, "PRIORITY_POLICY"}	# Note that in this project priority_policy is never used
**.targetCapacity = uniform(100bps, 2000bps, 0)

**.vector-recording = false
#**.scalar-recording = false
**.vector-record-eventnumbers = false
cmdenv-express-mode = true


[Config Exponential]
description = "Exponential distribution of t and k"
AerocomSystem.airCraft[*].router.switchTime = ${switchTime=0.1,0.9,2,3}s
AerocomSystem.airCraft[*].router.X = ${X=0..100 step 20}
AerocomSystem.airCraft[*].source.k = exponential(${k=2.5s}, 1)
#AerocomSystem.airCraft[*].server[*].t = exponential(${t=0.2,2,10,20,50}s, 2)
AerocomSystem.airCraft[*].server[*].t = exponential(${t=5}s, 2)

output-scalar-file = ${resultdir}/${configname}-${repetition}-${queuePolicy}-${routingAlgorithm}-S${switchTime}-X${X}-k${k}-t${t}.sca
output-vector-file = ${resultdir}/${configname}-${repetition}-${queuePolicy}-${routingAlgorithm}-S${switchTime}-X${X}-k${k}-t${t}.vec


[Config Lognormal]
description = "Lognormal distribution of t and k"
AerocomSystem.airCraft[*].router.switchTime = ${switchTime=0.2..0.8 step 0.2,2,3}s
AerocomSystem.airCraft[*].router.X = ${X=5}
AerocomSystem.airCraft[*].source.k = lognormal(${mk=-3.58}, ${wk=3}, 1) *1s
AerocomSystem.airCraft[*].server[*].t = lognormal(${mt=-2.9}, ${wt=3}, 1) *1s


output-scalar-file = ${resultdir}/${configname}-${repetition}-${queuePolicy}-${routingAlgorithm}-S${switchTime}-X${X}-mk${mk}-wk${wk}-mt${mt}-wt${wt}.sca
output-vector-file = ${resultdir}/${configname}-${repetition}-${queuePolicy}-${routingAlgorithm}-S${switchTime}-X${X}-mk${mk}-wk${wk}-mt${mt}-wt${wt}.vec