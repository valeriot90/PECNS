//
// Generated file, do not edit! Created by nedtool 5.0 from choose_server.msg.
//

#ifndef __CHOOSE_SERVER_M_H
#define __CHOOSE_SERVER_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>choose_server.msg:1</tt> by nedtool.
 * <pre>
 * message ChooseServerMsg
 * {
 *     double currentServerCapacity = 0.0;
 *     int serverIndex = 0;
 *     int hopCounter = 0;
 * }
 * </pre>
 */
class ChooseServerMsg : public ::omnetpp::cMessage
{
  protected:
    double currentServerCapacity;
    int serverIndex;
    int hopCounter;

  private:
    void copy(const ChooseServerMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ChooseServerMsg&);

  public:
    ChooseServerMsg(const char *name=nullptr, int kind=0);
    ChooseServerMsg(const ChooseServerMsg& other);
    virtual ~ChooseServerMsg();
    ChooseServerMsg& operator=(const ChooseServerMsg& other);
    virtual ChooseServerMsg *dup() const {return new ChooseServerMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual double getCurrentServerCapacity() const;
    virtual void setCurrentServerCapacity(double currentServerCapacity);
    virtual int getServerIndex() const;
    virtual void setServerIndex(int serverIndex);
    virtual int getHopCounter() const;
    virtual void setHopCounter(int hopCounter);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ChooseServerMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ChooseServerMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CHOOSE_SERVER_M_H

